                 -1   $MODLP52
0000              1   ;  MODLP52: Register definition for Atmel's AT89LP52
0000              2   ;
0000              3   ;   Copyright (C) 2011-2015  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19   ;--------------------------------------------------------
0000             20   ; Special Function Registers
0000             21   ;--------------------------------------------------------
0000             22   P0             DATA 0x80
0000             23   P1             DATA 0x90
0000             24   P2             DATA 0xa0
0000             25   P3             DATA 0xb0
0000             26   P4             DATA 0xc0
0000             27   PMOD           DATA 0xc1
0000             28   PSW            DATA 0xd0
0000             29   ACC            DATA 0xe0
0000             30   B              DATA 0xf0
0000             31   SP             DATA 0x81
0000             32   DPL            DATA 0x82
0000             33   DPH            DATA 0x83
0000             34   DP0L           DATA 0x82
0000             35   DP0H           DATA 0x83
0000             36   DP1L           DATA 0x84
0000             37   DP1H           DATA 0x85
0000             38   AUXR           DATA 0x8e
0000             39   AUXR1          DATA 0xa2
0000             40   DPCF           DATA 0xa2
0000             41   TCON           DATA 0x88
0000             42   TMOD           DATA 0x89
0000             43   T2CON          DATA 0xc8
0000             44   T2MOD          DATA 0xc9
0000             45   TL0            DATA 0x8a
0000             46   TL1            DATA 0x8b
0000             47   TL2            DATA 0xcc
0000             48   TH0            DATA 0x8c
0000             49   TH1            DATA 0x8d
0000             50   TH2            DATA 0xcd
0000             51   TCONB          DATA 0x91
0000             52   RCAP2L         DATA 0xca
0000             53   RCAP2H         DATA 0xcb
0000             54   WDTRST         DATA 0xa6
0000             55   WDTCON         DATA 0xa7
0000             56   SCON           DATA 0x98
0000             57   SBUF           DATA 0x99
0000             58   SADEN          DATA 0xb9
0000             59   SADDR          DATA 0xa9
0000             60   IE             DATA 0xa8
0000             61   IP             DATA 0xb8
0000             62   IPH            DATA 0xb7
0000             63   PCON           DATA 0x87
0000             64   CLKREG         DATA 0x8f
0000             65   MEMCON         DATA 0x96
0000             66   ;--------------------------------------------------------
0000             67   ; special function bits
0000             68   ;--------------------------------------------------------
0000             69   SCK            BIT 0x97
0000             70   MISO           BIT 0x96
0000             71   MOSI           BIT 0x95
0000             72   T2EX           BIT 0x91
0000             73   T2             BIT 0x90
0000             74   RD             BIT 0xb7
0000             75   WR             BIT 0xb6
0000             76   T1             BIT 0xb5
0000             77   T0             BIT 0xb4
0000             78   INT1           BIT 0xb3
0000             79   INT0           BIT 0xb2
0000             80   TXD            BIT 0xb1
0000             81   RXD            BIT 0xb0
0000             82   XTAL2          BIT 0xc7
0000             83   XTAL1          BIT 0xc6
0000             84   PSEN           BIT 0xc5
0000             85   ALE            BIT 0xc4
0000             86   CY             BIT 0xd7
0000             87   AC             BIT 0xd6
0000             88   F0             BIT 0xd5
0000             89   RS1            BIT 0xd4
0000             90   RS0            BIT 0xd3
0000             91   OV             BIT 0xd2
0000             92   UD             BIT 0xd1
0000             93   P              BIT 0xd0
0000             94   TF1            BIT 0x8f
0000             95   TR1            BIT 0x8e
0000             96   TF0            BIT 0x8d
0000             97   TR0            BIT 0x8c
0000             98   IE1            BIT 0x8b
0000             99   IT1            BIT 0x8a
0000            100   IE0            BIT 0x89
0000            101   IT0            BIT 0x88
0000            102   TF2            BIT 0xcf
0000            103   EXF2           BIT 0xce
0000            104   RCLK           BIT 0xcd
0000            105   TCLK           BIT 0xcc
0000            106   EXEN2          BIT 0xcb
0000            107   TR2            BIT 0xca
0000            108   C_T2           BIT 0xc9
0000            109   CP_RL2         BIT 0xc8
0000            110   SM0            BIT 0x9f
0000            111   FE             BIT 0x9f
0000            112   SM1            BIT 0x9e
0000            113   SM2            BIT 0x9d
0000            114   REN            BIT 0x9c
0000            115   TB8            BIT 0x9b
0000            116   RB8            BIT 0x9a
0000            117   TI             BIT 0x99
0000            118   RI             BIT 0x98
0000            119   EA             BIT 0xaf
0000            120   ET2            BIT 0xad
0000            121   ES             BIT 0xac
0000            122   ET1            BIT 0xab
0000            123   EX1            BIT 0xaa
0000            124   ET0            BIT 0xa9
0000            125   EX0            BIT 0xa8
0000            126   PT2            BIT 0xbd
0000            127   PS             BIT 0xbc
0000            128   PT1            BIT 0xbb
0000            129   PX1            BIT 0xba
0000            130   PT0            BIT 0xb9
0000            131   PX0            BIT 0xb8
0000              2   org 0000H
0000 0203EE       3      ljmp Init
0003              4   
0003              5   VLED EQU 207
0003              6   CLK  EQU 22118400
0003              7   BAUD equ 115200
0003              8   T1LOAD equ (0x100-(CLK/(16*BAUD)))
0003              9   TIMER0_RATE        EQU 1000
0003             10   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0003             11   
0003             12   CE_ADC EQU P2.0
0003             13   MY_MOSI EQU P2.1
0003             14   MY_MISO EQU P2.2
0003             15   MY_SCLK EQU P2.3
0003             16   BOOT_BUTTON EQU P4.5
0003             17   LCD_RS equ P1.2
0003             18   LCD_RW equ P1.3
0003             19   LCD_E  equ P1.4
0003             20   LCD_D4 equ P3.2
0003             21   LCD_D5 equ P3.3
0003             22   LCD_D6 equ P3.4
0003             23   LCD_D7 equ P3.5
0003             24   SOUND_OUT equ P2.7
0003             25   
0003             26            
                218   $LIST
                586   $LIST
                 96   $LIST
03ED            111   $LIST
                 57   $LIST
03ED             59   
03ED             60   
03ED             61   
0030             62   dseg at 0x30
0030             63   Vcc:                             ds 4
0034             64   Timer0_Count1ms:         ds 2 
0036             65   Result:          ds 2
0038             66   x:           ds 4
003C             67   y:               ds 4
0040             68   bcd:             ds 5
0045             69   x_lm335:         ds 4
0049             70   
0000             71   BSEG
0000             72   mf: dbit 1
0001             73   
03ED             74   CSEG
03ED 0A          75   NEWLINE: db '\n'
03EE             76   
03EE             77   Init:
03EE 75817F      78       mov SP, #7FH
03F1 75C100      79       mov PMOD, #0 
03F4 D2AF        80       setb EA                              ; Enable interrupts
03F6 120321      81            lcall INIT_SPI
03F9 120392      82            lcall InitSerialPort
03FC 12005D      83            lcall LCD_4BIT
03FF             84   Main_Loop:
03FF 120418      85            lcall Take_Sample
0402 C002        86            push AR2
0404 7AFA        86            mov R2, #250
0406 12000E      86            lcall ?Wait_Milli_Seconds
0409 D002        86            pop AR2
040B C002        87            push AR2
040D 7AFA        87            mov R2, #250
040F 12000E      87            lcall ?Wait_Milli_Seconds
0412 D002        87            pop AR2
0414             88   
0414             89             
0414 D2B7        90            setb P3.7
0416 80E7        91            sjmp Main_Loop  
0418             92            
0418             93            
0418             94   Take_Sample:
0418 75F007      95            mov b, #7
041B 120360      95            lcall ?Average_ADC_Channel
041E 120434      96            lcall Calculate_Vref
0421             97            ;fetch result from channel 0 as room temperature
0421 75F000      98            mov b, #0
0424 120360      98            lcall ?Average_ADC_Channel
0427 12046B      99            lcall LM335_Result_SPI_Routine
042A            100            ;fetch result from channel 1
042A 75F001     101            mov b, #1
042D 120360     101            lcall ?Average_ADC_Channel
0430 1204B4     102       lcall Result_SPI_Routine     ; 0.5 second delay between samples
0433 22         103            ret
0434            104   Calculate_Vref:
0434 85363C     105            mov y+0, result+0 
0437 85373D     105            mov y+1, result+1
043A 753E00     105            mov y+2, #0 
043D 753F00     105            mov y+3, #0
0440 753831     106            mov x+0, #low (VLED*1023 % 0x10000) 
0443 75393B     106            mov x+1, #high(VLED*1023 % 0x10000) 
0446 753A03     106            mov x+2, #low (VLED*1023 / 0x10000) 
0449 753B00     106            mov x+3, #high(VLED*1023 / 0x10000) 
044C 1202B8     107            lcall div32
044F 753C10     108            mov y+0, #low (10000 % 0x10000) 
0452 753D27     108            mov y+1, #high(10000 % 0x10000) 
0455 753E00     108            mov y+2, #low (10000 / 0x10000) 
0458 753F00     108            mov y+3, #high(10000 / 0x10000) 
045B 12022B     109            lcall mul32                     ; Gets Vcc*10^6
045E            110   
045E 853830     111            mov Vcc+0, x+0 
0461 853931     111            mov Vcc+1, x+1
0464 853A32     111            mov Vcc+2, x+2 
0467 853B33     111            mov Vcc+3, x+3
046A            112            
046A 22         113            ret
046B            114            
046B            115   LM335_Result_SPI_Routine:
046B 85303C     116            mov y+0, Vcc+0 
046E 85313D     116            mov y+1, Vcc+1
0471 85323E     116            mov y+2, Vcc+2 
0474 85333F     116            mov y+3, Vcc+3
0477            117   
0477 12022B     118       lcall mul32                  ; Vout*10^6 = ADC*(Vcc*10^6)/1023
047A 753CFF     119            mov y+0, #low (1023 % 0x10000) 
047D 753D03     119            mov y+1, #high(1023 % 0x10000) 
0480 753E00     119            mov y+2, #low (1023 / 0x10000) 
0483 753F00     119            mov y+3, #high(1023 / 0x10000)          
0486 1202B8     120       lcall div32
0489 753C10     121            mov y+0, #low (2730000 % 0x10000) 
048C 753DA8     121            mov y+1, #high(2730000 % 0x10000) 
048F 753E29     121            mov y+2, #low (2730000 / 0x10000) 
0492 753F00     121            mov y+3, #high(2730000 / 0x10000)       ; T*10^4 = (Vout*10^6-2.73*10^6)/100
0495 120197     122       lcall sub32
0498 753C64     123            mov y+0, #low (100 % 0x10000) 
049B 753D00     123            mov y+1, #high(100 % 0x10000) 
049E 753E00     123            mov y+2, #low (100 / 0x10000) 
04A1 753F00     123            mov y+3, #high(100 / 0x10000)           
04A4 1202B8     124       lcall div32
04A7            125   
04A7 853845     126            mov x_lm335+0, x+0 
04AA 853946     126            mov x_lm335+1, x+1
04AD 853A47     126            mov x_lm335+2, x+2 
04B0 853B48     126            mov x_lm335+3, x+3
04B3            127            
04B3 22         128            ret
04B4            129   
04B4            130   Result_SPI_Routine:
04B4 85303C     131            mov y+0, Vcc+0 
04B7 85313D     131            mov y+1, Vcc+1
04BA 85323E     131            mov y+2, Vcc+2 
04BD 85333F     131            mov y+3, Vcc+3
04C0            132            
04C0 12022B     133            lcall mul32
04C3 753CFF     134            mov y+0, #low (1023 % 0x10000) 
04C6 753D03     134            mov y+1, #high(1023 % 0x10000) 
04C9 753E00     134            mov y+2, #low (1023 / 0x10000) 
04CC 753F00     134            mov y+3, #high(1023 / 0x10000) 
04CF 1202B8     135            lcall div32
04D2 753C64     136            mov y+0, #low (100 % 0x10000) 
04D5 753D00     136            mov y+1, #high(100 % 0x10000) 
04D8 753E00     136            mov y+2, #low (100 / 0x10000) 
04DB 753F00     136            mov y+3, #high(100 / 0x10000) 
04DE 12022B     137            lcall mul32     
04E1 753CC6     138            mov y+0, #low (454 % 0x10000) 
04E4 753D01     138            mov y+1, #high(454 % 0x10000) 
04E7 753E00     138            mov y+2, #low (454 / 0x10000) 
04EA 753F00     138            mov y+3, #high(454 / 0x10000)   ;Gain 
04ED 1202B8     139            lcall div32
04F0 753C29     140            mov y+0, #low (41 % 0x10000) 
04F3 753D00     140            mov y+1, #high(41 % 0x10000) 
04F6 753E00     140            mov y+2, #low (41 / 0x10000) 
04F9 753F00     140            mov y+3, #high(41 / 0x10000)    ;Since calculations have been scaled up by 10^6, this is equivalent to dividing by 41*10^-6
04FC 1202B8     141            lcall div32
04FF            142            
04FF            143   
04FF 85453C     144            mov y+0, x_lm335+0 
0502 85463D     144            mov y+1, x_lm335+1
0505 85473E     144            mov y+2, x_lm335+2 
0508 85483F     144            mov y+3, x_lm335+3
050B 120176     145            lcall add32
050E            146            
050E 753C0A     147            mov y+0, #low (10 % 0x10000) 
0511 753D00     147            mov y+1, #high(10 % 0x10000) 
0514 753E00     147            mov y+2, #low (10 / 0x10000) 
0517 753F00     147            mov y+3, #high(10 / 0x10000) 
051A 1202B8     148            lcall div32
051D            149   
051D 1200B1     150            lcall hex2bcd
0520            151   
0520            152   Send_Serial:
0520            153            
0520 C000       154       push ar0
0522 A841       154       mov r0, bcd+1
0524 1203C4     154       lcall ?Send_BCD
0527 D000       154       pop ar0
0529 C000       155       push ar0
052B A840       155       mov r0, bcd
052D 1203C4     155       lcall ?Send_BCD
0530 D000       155       pop ar0
0532 740A       156            mov a, #'\n'
0534 1203B1     157            lcall putchar
0537            158            
0537 C0E0       159            push acc
0539 7401       159            mov a, #1
053B 14         159            dec a
053C 120096     159            lcall ?Set_Cursor_1 ; Select column and row
053F D0E0       159            pop acc
0541            160                    
0541            161   
0541            162   Display_Temp_LCD:
0541 C000       163            push ar0
0543 A844       163            mov r0, bcd+4
0545 12009B     163            lcall ?Display_BCD
0548 D000       163            pop ar0
054A C000       164            push ar0
054C A843       164            mov r0, bcd+3
054E 12009B     164            lcall ?Display_BCD
0551 D000       164            pop ar0
0553 C000       165            push ar0
0555 A842       165            mov r0, bcd+2
0557 12009B     165            lcall ?Display_BCD
055A D000       165            pop ar0
055C C000       166            push ar0
055E A841       166            mov r0, bcd+1
0560 12009B     166            lcall ?Display_BCD
0563 D000       166            pop ar0
0565 C000       167            push ar0
0567 A840       167            mov r0, bcd
0569 12009B     167            lcall ?Display_BCD
056C D000       167            pop ar0
056E 22         168       ret
056F            169   en
