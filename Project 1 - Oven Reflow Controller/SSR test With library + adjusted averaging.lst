                 -1   $MODLP52
0000              1   ;  MODLP52: Register definition for Atmel's AT89LP52
0000              2   ;
0000              3   ;   Copyright (C) 2011-2015  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19   ;--------------------------------------------------------
0000             20   ; Special Function Registers
0000             21   ;--------------------------------------------------------
0000             22   P0             DATA 0x80
0000             23   P1             DATA 0x90
0000             24   P2             DATA 0xa0
0000             25   P3             DATA 0xb0
0000             26   P4             DATA 0xc0
0000             27   PMOD           DATA 0xc1
0000             28   PSW            DATA 0xd0
0000             29   ACC            DATA 0xe0
0000             30   B              DATA 0xf0
0000             31   SP             DATA 0x81
0000             32   DPL            DATA 0x82
0000             33   DPH            DATA 0x83
0000             34   DP0L           DATA 0x82
0000             35   DP0H           DATA 0x83
0000             36   DP1L           DATA 0x84
0000             37   DP1H           DATA 0x85
0000             38   AUXR           DATA 0x8e
0000             39   AUXR1          DATA 0xa2
0000             40   DPCF           DATA 0xa2
0000             41   TCON           DATA 0x88
0000             42   TMOD           DATA 0x89
0000             43   T2CON          DATA 0xc8
0000             44   T2MOD          DATA 0xc9
0000             45   TL0            DATA 0x8a
0000             46   TL1            DATA 0x8b
0000             47   TL2            DATA 0xcc
0000             48   TH0            DATA 0x8c
0000             49   TH1            DATA 0x8d
0000             50   TH2            DATA 0xcd
0000             51   TCONB          DATA 0x91
0000             52   RCAP2L         DATA 0xca
0000             53   RCAP2H         DATA 0xcb
0000             54   WDTRST         DATA 0xa6
0000             55   WDTCON         DATA 0xa7
0000             56   SCON           DATA 0x98
0000             57   SBUF           DATA 0x99
0000             58   SADEN          DATA 0xb9
0000             59   SADDR          DATA 0xa9
0000             60   IE             DATA 0xa8
0000             61   IP             DATA 0xb8
0000             62   IPH            DATA 0xb7
0000             63   PCON           DATA 0x87
0000             64   CLKREG         DATA 0x8f
0000             65   MEMCON         DATA 0x96
0000             66   ;--------------------------------------------------------
0000             67   ; special function bits
0000             68   ;--------------------------------------------------------
0000             69   SCK            BIT 0x97
0000             70   MISO           BIT 0x96
0000             71   MOSI           BIT 0x95
0000             72   T2EX           BIT 0x91
0000             73   T2             BIT 0x90
0000             74   RD             BIT 0xb7
0000             75   WR             BIT 0xb6
0000             76   T1             BIT 0xb5
0000             77   T0             BIT 0xb4
0000             78   INT1           BIT 0xb3
0000             79   INT0           BIT 0xb2
0000             80   TXD            BIT 0xb1
0000             81   RXD            BIT 0xb0
0000             82   XTAL2          BIT 0xc7
0000             83   XTAL1          BIT 0xc6
0000             84   PSEN           BIT 0xc5
0000             85   ALE            BIT 0xc4
0000             86   CY             BIT 0xd7
0000             87   AC             BIT 0xd6
0000             88   F0             BIT 0xd5
0000             89   RS1            BIT 0xd4
0000             90   RS0            BIT 0xd3
0000             91   OV             BIT 0xd2
0000             92   UD             BIT 0xd1
0000             93   P              BIT 0xd0
0000             94   TF1            BIT 0x8f
0000             95   TR1            BIT 0x8e
0000             96   TF0            BIT 0x8d
0000             97   TR0            BIT 0x8c
0000             98   IE1            BIT 0x8b
0000             99   IT1            BIT 0x8a
0000            100   IE0            BIT 0x89
0000            101   IT0            BIT 0x88
0000            102   TF2            BIT 0xcf
0000            103   EXF2           BIT 0xce
0000            104   RCLK           BIT 0xcd
0000            105   TCLK           BIT 0xcc
0000            106   EXEN2          BIT 0xcb
0000            107   TR2            BIT 0xca
0000            108   C_T2           BIT 0xc9
0000            109   CP_RL2         BIT 0xc8
0000            110   SM0            BIT 0x9f
0000            111   FE             BIT 0x9f
0000            112   SM1            BIT 0x9e
0000            113   SM2            BIT 0x9d
0000            114   REN            BIT 0x9c
0000            115   TB8            BIT 0x9b
0000            116   RB8            BIT 0x9a
0000            117   TI             BIT 0x99
0000            118   RI             BIT 0x98
0000            119   EA             BIT 0xaf
0000            120   ET2            BIT 0xad
0000            121   ES             BIT 0xac
0000            122   ET1            BIT 0xab
0000            123   EX1            BIT 0xaa
0000            124   ET0            BIT 0xa9
0000            125   EX0            BIT 0xa8
0000            126   PT2            BIT 0xbd
0000            127   PS             BIT 0xbc
0000            128   PT1            BIT 0xbb
0000            129   PX1            BIT 0xba
0000            130   PT0            BIT 0xb9
0000            131   PX0            BIT 0xb8
0000              2   org 0000H
0000 0203EE       3      ljmp Init
0003              4   
0003              5   VLED EQU 207
0003              6   CLK  EQU 22118400
0003              7   BAUD equ 115200
0003              8   T1LOAD equ (0x100-(CLK/(16*BAUD)))
0003              9   TIMER0_RATE        EQU 1000
0003             10   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0003             11   
0003             12   CE_ADC EQU P2.0
0003             13   MY_MOSI EQU P2.1
0003             14   MY_MISO EQU P2.2
0003             15   MY_SCLK EQU P2.3
0003             16   BOOT_BUTTON EQU P4.5
0003             17   LCD_RS equ P1.2
0003             18   LCD_RW equ P1.3
0003             19   LCD_E  equ P1.4
0003             20   LCD_D4 equ P3.2
0003             21   LCD_D5 equ P3.3
0003             22   LCD_D6 equ P3.4
0003             23   LCD_D7 equ P3.5
0003             24   SOUND_OUT equ P2.7
0003             25   
0003             26            
                567   $LIST
                 74   $LIST
03BB            112   $LIST
                 57   $LIST
03BB             59   
03BB             60   
03BB             61   
0030             62   dseg at 0x30
0030             63   Vcc:                             ds 4
0034             64   Timer0_Count1ms:         ds 2 
0036             65   Result:          ds 2
0038             66   x:           ds 4
003C             67   y:               ds 4
0040             68   bcd:             ds 5
0045             69   x_lm335:         ds 4
0049             70   
0000             71   BSEG
0000             72   mf: dbit 1
0001             73   
03BB             74   CSEG
03BB 0A          75   NEWLINE: db '\n'
03BC             76   
03BC             77   ; Takes the average of 100 samples from specified
03BC             78   ; ADC channel. Reading is stored in x
                 79   Average_ADC_Channel MAC
                 80   	mov b, #%0
                 81   	lcall ?Average_ADC_Channel
                 82   ENDMAC
03BC             83   ?Average_ADC_Channel:
03BC 753800      84            mov x+0, #low (0 % 0x10000) 
03BF 753900      84            mov x+1, #high(0 % 0x10000) 
03C2 753A00      84            mov x+2, #low (0 / 0x10000) 
03C5 753B00      84            mov x+3, #high(0 / 0x10000) 
03C8 7D64        85            mov R5, #100
03CA             86   Sum_loop0:
03CA 12033F      87            lcall _Read_ADC_Channel
03CD 753F00      88            mov y+3, #0
03D0 753E00      89            mov y+2, #0
03D3 85373D      90            mov y+1, result+1
03D6 85363C      91            mov y+0, result+0
03D9 120176      92            lcall add32
03DC DDEC        93            djnz R5, Sum_loop0
03DE 753C64      94            mov y+0, #low (100 % 0x10000) 
03E1 753D00      94            mov y+1, #high(100 % 0x10000) 
03E4 753E00      94            mov y+2, #low (100 / 0x10000) 
03E7 753F00      94            mov y+3, #high(100 / 0x10000) 
03EA 1202B8      95            lcall div32
03ED 22          96   ret
03EE             97    
03EE             98   Init:
03EE 75817F      99       mov SP, #7FH
03F1 75C100     100       mov PMOD, #0 
03F4 D2AF       101       setb EA                              ; Enable interrupts
03F6 120321     102            lcall INIT_SPI
03F9 120360     103            lcall InitSerialPort
03FC 12005D     104            lcall LCD_4BIT
03FF            105   Main_Loop:
03FF 12040F     106            lcall Take_Sample
0402 C002       107            push AR2
0404 7AFA       107            mov R2, #250
0406 12000E     107            lcall ?Wait_Milli_Seconds
0409 D002       107            pop AR2
040B            108             
040B D2B7       109            setb P3.7
040D 80F0       110            sjmp Main_Loop  
040F            111            
040F            112            
040F            113   Take_Sample:
040F 75F007     114            mov b, #7
0412 1203BC     114            lcall ?Average_ADC_Channel
0415 12042B     115            lcall Calculate_Vref
0418            116            ;fetch result from channel 0 as room temperature
0418 75F000     117            mov b, #0
041B 1203BC     117            lcall ?Average_ADC_Channel
041E 120462     118            lcall LM335_Result_SPI_Routine
0421            119            ;fetch result from channel 1
0421 75F001     120            mov b, #1
0424 1203BC     120            lcall ?Average_ADC_Channel
0427 1204AB     121       lcall Result_SPI_Routine     ; 0.5 second delay between samples
042A 22         122            ret
042B            123   Calculate_Vref:
042B 85363C     124            mov y+0, result+0 
042E 85373D     124            mov y+1, result+1
0431 753E00     124            mov y+2, #0 
0434 753F00     124            mov y+3, #0
0437 753831     125            mov x+0, #low (VLED*1023 % 0x10000) 
043A 75393B     125            mov x+1, #high(VLED*1023 % 0x10000) 
043D 753A03     125            mov x+2, #low (VLED*1023 / 0x10000) 
0440 753B00     125            mov x+3, #high(VLED*1023 / 0x10000) 
0443 1202B8     126            lcall div32
0446 753C10     127            mov y+0, #low (10000 % 0x10000) 
0449 753D27     127            mov y+1, #high(10000 % 0x10000) 
044C 753E00     127            mov y+2, #low (10000 / 0x10000) 
044F 753F00     127            mov y+3, #high(10000 / 0x10000) 
0452 12022B     128            lcall mul32                     ; Gets Vcc*10^6
0455            129   
0455 853830     130            mov Vcc+0, x+0 
0458 853931     130            mov Vcc+1, x+1
045B 853A32     130            mov Vcc+2, x+2 
045E 853B33     130            mov Vcc+3, x+3
0461            131            
0461 22         132            ret
0462            133            
0462            134   LM335_Result_SPI_Routine:
0462 85303C     135            mov y+0, Vcc+0 
0465 85313D     135            mov y+1, Vcc+1
0468 85323E     135            mov y+2, Vcc+2 
046B 85333F     135            mov y+3, Vcc+3
046E            136   
046E 12022B     137       lcall mul32                  ; Vout*10^6 = ADC*(Vcc*10^6)/1023
0471 753CFF     138            mov y+0, #low (1023 % 0x10000) 
0474 753D03     138            mov y+1, #high(1023 % 0x10000) 
0477 753E00     138            mov y+2, #low (1023 / 0x10000) 
047A 753F00     138            mov y+3, #high(1023 / 0x10000)          
047D 1202B8     139       lcall div32
0480 753C10     140            mov y+0, #low (2730000 % 0x10000) 
0483 753DA8     140            mov y+1, #high(2730000 % 0x10000) 
0486 753E29     140            mov y+2, #low (2730000 / 0x10000) 
0489 753F00     140            mov y+3, #high(2730000 / 0x10000)       ; T*10^4 = (Vout*10^6-2.73*10^6)/100
048C 120197     141       lcall sub32
048F 753C64     142            mov y+0, #low (100 % 0x10000) 
0492 753D00     142            mov y+1, #high(100 % 0x10000) 
0495 753E00     142            mov y+2, #low (100 / 0x10000) 
0498 753F00     142            mov y+3, #high(100 / 0x10000)           
049B 1202B8     143       lcall div32
049E            144   
049E 853845     145            mov x_lm335+0, x+0 
04A1 853946     145            mov x_lm335+1, x+1
04A4 853A47     145            mov x_lm335+2, x+2 
04A7 853B48     145            mov x_lm335+3, x+3
04AA            146            
04AA 22         147            ret
04AB            148   
04AB            149   Result_SPI_Routine:
04AB 85303C     150            mov y+0, Vcc+0 
04AE 85313D     150            mov y+1, Vcc+1
04B1 85323E     150            mov y+2, Vcc+2 
04B4 85333F     150            mov y+3, Vcc+3
04B7            151            
04B7 12022B     152            lcall mul32
04BA 753CFF     153            mov y+0, #low (1023 % 0x10000) 
04BD 753D03     153            mov y+1, #high(1023 % 0x10000) 
04C0 753E00     153            mov y+2, #low (1023 / 0x10000) 
04C3 753F00     153            mov y+3, #high(1023 / 0x10000) 
04C6 1202B8     154            lcall div32
04C9 753C64     155            mov y+0, #low (100 % 0x10000) 
04CC 753D00     155            mov y+1, #high(100 % 0x10000) 
04CF 753E00     155            mov y+2, #low (100 / 0x10000) 
04D2 753F00     155            mov y+3, #high(100 / 0x10000) 
04D5 12022B     156            lcall mul32     
04D8 753CC6     157            mov y+0, #low (454 % 0x10000) 
04DB 753D01     157            mov y+1, #high(454 % 0x10000) 
04DE 753E00     157            mov y+2, #low (454 / 0x10000) 
04E1 753F00     157            mov y+3, #high(454 / 0x10000)   ;Gain 
04E4 1202B8     158            lcall div32
04E7 753C29     159            mov y+0, #low (41 % 0x10000) 
04EA 753D00     159            mov y+1, #high(41 % 0x10000) 
04ED 753E00     159            mov y+2, #low (41 / 0x10000) 
04F0 753F00     159            mov y+3, #high(41 / 0x10000)    ;Since calculations have been scaled up by 10^6, this is equivalent to dividing by 41*10^-6
04F3 1202B8     160            lcall div32
04F6            161            
04F6            162   
04F6 85453C     163            mov y+0, x_lm335+0 
04F9 85463D     163            mov y+1, x_lm335+1
04FC 85473E     163            mov y+2, x_lm335+2 
04FF 85483F     163            mov y+3, x_lm335+3
0502 120176     164            lcall add32
0505            165   
0505 1200B1     166            lcall hex2bcd
0508            167   
0508            168   Send_Serial:
0508            169            
0508 C000       170       push ar0
050A A842       170       mov r0, bcd+2
050C 120392     170       lcall ?Send_BCD
050F D000       170       pop ar0
0511 C000       171       push ar0
0513 A841       171       mov r0, bcd+1
0515 120392     171       lcall ?Send_BCD
0518 D000       171       pop ar0
051A 740A       172            mov a, #'\n'
051C 12037F     173            lcall putchar
051F            174            
051F C0E0       175            push acc
0521 7401       175            mov a, #1
0523 14         175            dec a
0524 120096     175            lcall ?Set_Cursor_1 ; Select column and row
0527 D0E0       175            pop acc
0529            176                    
0529            177   
0529            178   Display_Temp_LCD:
0529 C000       179            push ar0
052B A844       179            mov r0, bcd+4
052D 12009B     179            lcall ?Display_BCD
0530 D000       179            pop ar0
0532 C000       180            push ar0
0534 A843       180            mov r0, bcd+3
0536 12009B     180            lcall ?Display_BCD
0539 D000       180            pop ar0
053B C000       181            push ar0
053D A842       181            mov r0, bcd+2
053F 12009B     181            lcall ?Display_BCD
0542 D000       181            pop ar0
0544 C000       182            push ar0
0546 A841       182            mov r0, bcd+1
0548 12009B     182            lcall ?Display_BCD
054B D000       182            pop ar0
054D C000       183            push ar0
054F A840       183            mov r0, bcd
0551 12009B     183            lcall ?Display_BCD
0554 D000       183            pop ar0
0556 22         184       ret
0557            185   en
